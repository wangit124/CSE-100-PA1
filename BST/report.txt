/* Description: Program runtime results, comparing BST
 * and BSA insert, find runtimes.
 * Name: Luhao Wang
 * Email: luw055@ucsd.edu
 * Date: April 15, 2019
 * Sources: None
 */

-----RUNTIMES------

[luw055@ieng6-201]:BST:498$ ./benchmark_bst
	
	Insert benchmarking for BSA and BST: 
	Number of data to insert: 30000
	Average time taken to insert for BSA: 97709162
	nanoseconds
	Average time taken to insert for BST: 11785986
	nanoseconds

	Find benchmarking for BSA and BST: 
	Number of data in BSA/BST: 30000
	Number of data to find: 30000
	Average time taken to find for BSA: 11681576
	nanoseconds
	Average time taken to find for BST: 10182272
	nanoseconds

1. Overall, BST was much faster to insert() because it
   doesn't require traversing and inserting the element
   then resizing the entire array.

2. Overall, BST is slightly faster for find(), however
   these values are much closer because BST and BSA 
   are implementing relatively the same method and not
   having to traverse the array afterwards using an
   iterator, or resize the array.

3. The significant difference lies in the fact that the
   BSA needs to dynamically resize the array everytime it
   inserts an element. In addition to the O(log n) search, it
   would take additional O(n) time to resize the
   array, furthermore, BSA needs to traverse to the
   desired index with an iterator after the search. 

